"""
Django settings for django_fast_develop project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os.path
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# print(BASE_DIR)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/


# 配置 django-registration-redux 重向定
LOGIN_REDIRECT_URL = "/joblist"
SIMPLE_BACKEND_REDIRECT_URL = "/accounts/login/"

# Application definition

INSTALLED_APPS = [
	'simpleui',
	'registration',
	'bootstrap4',
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django_python3_ldap',
	'job',
	'interview',
	'usercon'
]
STATICFILES_DIRS = [
	os.path.join(BASE_DIR, "static"),
]

MIDDLEWARE = [
	'interview.performance.performance_logger_middleware',
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_fast_develop.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'django_fast_develop.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': "{}/db.sqlite3".format(BASE_DIR),
	}
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
###########################################################################

# 配置日志记录
# asctime 是包含年月日时分秒的时间变量
LOGGING = {
	"version": 1,
	"disable_existing_loggers": False,
	"formatters": {
		"simple": {
			"format": "%(asctime)s %(name)-12s %(lineno)d %(levelname)-8s %(message)s",
		}
	},
	"handlers": {
		"console": {
			"class": "logging.StreamHandler",
			"formatter": "simple",
		},

		# mail_admin 用于在出现符合定义的错误级别时，发送信息到邮件，以通知相关人员及时处理
		"mail_admins": {
			"level": "ERROR",
			"class": "django.utils.log.AdminEmailHandler",
		},
		# 记到日志信息到文件
		# 默认级别为 INFO
		"file": {
			"class": "logging.FileHandler",
			"formatter": "simple",
			"filename": os.path.join(os.path.dirname(BASE_DIR), "django_fast_develop.admin.log")
		},

		# 中间件的日志配置
		"performance": {
			"class": "logging.FileHandler",
			"formatter": "simple",
			"filename": os.path.join(os.path.dirname(BASE_DIR), 'recruitment.performance.log'),
		}
	},

	# 系统级别，默认全局启用
	"root": {
		"handler": ["console", "file"],
		"level": "INFO",
	},
	"loggers": {
		"django_python3_ldap": {
			"handlers": ["console", "file"],
			"level": "DEBUG",
		},
		"interview": {
			"handlers": ["console"],
			"level": "INFO"
		},
		# 中间件的 performance
		'interview.performance': {
			"handlers": ["console", "performance"],
			'level': "INFO",
			"propagate": False,
		},
	}
}

###########################################################################

# Initiate TLS on connection.
LDAP_AUTH_USE_TLS = False

# Specify which TLS version to use (Python 3.10 requires TLSv1 or higher)
import ssl

LDAP_AUTH_TLS_VERSION = ssl.PROTOCOL_TLSv1_2

# The LDAP class that represents a user.
LDAP_AUTH_OBJECT_CLASS = "inetOrgPerson"

# User model fields mapped to the LDAP
# attributes that represent them.
LDAP_AUTH_USER_FIELDS = {
	"username": "cn",
	"first_name": "givenName",
	"last_name": "sn",
	"email": "mail",
}

# A tuple of django model fields used to uniquely identify a user.
LDAP_AUTH_USER_LOOKUP_FIELDS = ("username",)

# Path to a callable that takes a dict of {model_field_name: value},
# returning a dict of clean model data.
# Use this to customize how data loaded from LDAP is saved to the User model.
LDAP_AUTH_CLEAN_USER_DATA = "django_python3_ldap.utils.clean_user_data"

# 默认 django-python3-ldap 中没有配置
# 添加 AUTHENTICATION_BACKENDS
AUTHENTICATION_BACKENDS = ("django_python3_ldap.auth.LDAPBackend", "django.contrib.auth.backends.ModelBackend")

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*ual((asdf%wt%5_ara^*f5@%3234&8&gr=fg)^b&c@ioqdkekdtmb5v2i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["127.0.0.1"]

# The URL of the LDAP server(s).  List multiple servers for high availability ServerPool connection.
LDAP_AUTH_URL = ["ldap://42.193.153.112:389"]

# The LDAP search base for looking up users.
LDAP_AUTH_SEARCH_BASE = "dc=ihopeit,dc=com"

# The LDAP username and password of a user for querying the LDAP database for user
# details. If None, then the authenticated user will be used for querying, and
# the `ldap_sync_users`, `ldap_clean_users` commands will perform an anonymous query.
LDAP_AUTH_CONNECTION_USERNAME = "admin"
LDAP_AUTH_CONNECTION_PASSWORD = "rgJGQCJFa9aeSGTfOQu7"
